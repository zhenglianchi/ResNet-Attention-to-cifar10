Namespace(batch_size=128, debug=False, gpu=0, lr=0.001, model='resnet_att', nepochs=130, save='log/')
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): Sequential(
    (0): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (1): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Residual_attention(
      (conv1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv3): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (relu): ReLU()
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (attention): Channel_Spatial_Attention(
        (channel): ChannelAttention(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (max_pool): AdaptiveMaxPool2d(output_size=1)
          (fc): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU()
            (2): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (sigmoid): Sigmoid()
        )
        (Spatial): SpatialAttention(
          (conv1): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Sequential(
    (0): Linear(in_features=64, out_features=10, bias=True)
    (1): LogSoftmax(dim=1)
  )
)
Number of parameters: 5108844
epoch:1
Train loss : 0.9883	Train Acc : 0.7351
epoch:2
Train loss : 0.5810	Train Acc : 0.8035
epoch:3
Train loss : 0.5297	Train Acc : 0.8168
epoch:4
Train loss : 0.4969	Train Acc : 0.8261
epoch:5
Train loss : 0.4831	Train Acc : 0.8312
Val loss : 0.4742	Val Acc : 0.8337
best accuracy is 0.8337
epoch:6
Train loss : 0.4853	Train Acc : 0.8294
epoch:7
Train loss : 0.4614	Train Acc : 0.8395
epoch:8
Train loss : 0.4551	Train Acc : 0.8384
epoch:9
Train loss : 0.4322	Train Acc : 0.8475
epoch:10
Train loss : 0.4307	Train Acc : 0.8485
Val loss : 0.4261	Val Acc : 0.8493
best accuracy is 0.8493
epoch:11
Train loss : 0.4207	Train Acc : 0.8510
epoch:12
Train loss : 0.4135	Train Acc : 0.8541
epoch:13
Train loss : 0.4063	Train Acc : 0.8564
epoch:14
Train loss : 0.4028	Train Acc : 0.8580
epoch:15
Train loss : 0.3913	Train Acc : 0.8619
Val loss : 0.4092	Val Acc : 0.8588
best accuracy is 0.8588
epoch:16
Train loss : 0.3888	Train Acc : 0.8625
epoch:17
Train loss : 0.3771	Train Acc : 0.8674
epoch:18
Train loss : 0.3724	Train Acc : 0.8670
epoch:19
Train loss : 0.3718	Train Acc : 0.8685
epoch:20
Train loss : 0.3643	Train Acc : 0.8700
Val loss : 0.4187	Val Acc : 0.8568
best accuracy is 0.8588
epoch:21
Train loss : 0.3617	Train Acc : 0.8716
epoch:22
Train loss : 0.3564	Train Acc : 0.8734
epoch:23
Train loss : 0.3536	Train Acc : 0.8742
epoch:24
Train loss : 0.3449	Train Acc : 0.8777
epoch:25
Train loss : 0.3455	Train Acc : 0.8769
Val loss : 0.3750	Val Acc : 0.8715
best accuracy is 0.8715
epoch:26
Train loss : 0.3435	Train Acc : 0.8776
epoch:27
Train loss : 0.3385	Train Acc : 0.8801
epoch:28
Train loss : 0.3299	Train Acc : 0.8822
epoch:29
Train loss : 0.3384	Train Acc : 0.8778
epoch:30
Train loss : 0.3265	Train Acc : 0.8830
Val loss : 0.3788	Val Acc : 0.8705
best accuracy is 0.8715
epoch:31
Train loss : 0.3214	Train Acc : 0.8851
epoch:32
Train loss : 0.3211	Train Acc : 0.8856
epoch:33
Train loss : 0.3154	Train Acc : 0.8862
epoch:34
Train loss : 0.3189	Train Acc : 0.8879
epoch:35
Train loss : 0.3111	Train Acc : 0.8889
Val loss : 0.3733	Val Acc : 0.8724
best accuracy is 0.8724
epoch:36
Train loss : 0.3101	Train Acc : 0.8897
epoch:37
Train loss : 0.3067	Train Acc : 0.8922
epoch:38
Train loss : 0.3035	Train Acc : 0.8916
epoch:39
Train loss : 0.3011	Train Acc : 0.8918
epoch:40
Train loss : 0.2952	Train Acc : 0.8943
Val loss : 0.3660	Val Acc : 0.8741
best accuracy is 0.8741
epoch:41
Train loss : 0.2951	Train Acc : 0.8942
epoch:42
Train loss : 0.2944	Train Acc : 0.8939
epoch:43
Train loss : 0.2922	Train Acc : 0.8953
epoch:44
Train loss : 0.2867	Train Acc : 0.8972
epoch:45
Train loss : 0.2852	Train Acc : 0.8994
Val loss : 0.3631	Val Acc : 0.8730
best accuracy is 0.8741
epoch:46
Train loss : 0.2877	Train Acc : 0.8965
epoch:47
Train loss : 0.2813	Train Acc : 0.8994
epoch:48
Train loss : 0.2774	Train Acc : 0.8997
epoch:49
Train loss : 0.2768	Train Acc : 0.9004
epoch:50
Train loss : 0.2703	Train Acc : 0.9032
Val loss : 0.3646	Val Acc : 0.8748
best accuracy is 0.8748
epoch:51
Train loss : 0.2716	Train Acc : 0.9036
epoch:52
Train loss : 0.2638	Train Acc : 0.9047
epoch:53
Train loss : 0.2664	Train Acc : 0.9033
epoch:54
Train loss : 0.2660	Train Acc : 0.9047
epoch:55
Train loss : 0.2603	Train Acc : 0.9055
Val loss : 0.3655	Val Acc : 0.8732
best accuracy is 0.8748
epoch:56
Train loss : 0.2606	Train Acc : 0.9052
epoch:57
Train loss : 0.2582	Train Acc : 0.9062
epoch:58
Train loss : 0.2596	Train Acc : 0.9069
epoch:59
Train loss : 0.2552	Train Acc : 0.9069
epoch:60
Train loss : 0.2503	Train Acc : 0.9096
Val loss : 0.3489	Val Acc : 0.8815
best accuracy is 0.8815
epoch:61
Train loss : 0.2486	Train Acc : 0.9095
epoch:62
Train loss : 0.2449	Train Acc : 0.9120
epoch:63
Train loss : 0.2506	Train Acc : 0.9092
epoch:64
Train loss : 0.2458	Train Acc : 0.9113
epoch:65
Train loss : 0.2400	Train Acc : 0.9134
Val loss : 0.3569	Val Acc : 0.8779
best accuracy is 0.8815
epoch:66
Train loss : 0.2402	Train Acc : 0.9140
epoch:67
Train loss : 0.2376	Train Acc : 0.9149
epoch:68
Train loss : 0.2394	Train Acc : 0.9133
epoch:69
Train loss : 0.2362	Train Acc : 0.9136
epoch:70
Train loss : 0.2337	Train Acc : 0.9149
Val loss : 0.3530	Val Acc : 0.8804
best accuracy is 0.8815
epoch:71
Train loss : 0.2323	Train Acc : 0.9167
epoch:72
Train loss : 0.2322	Train Acc : 0.9141
epoch:73
Train loss : 0.2249	Train Acc : 0.9175
epoch:74
Train loss : 0.2256	Train Acc : 0.9189
epoch:75
Train loss : 0.2233	Train Acc : 0.9202
Val loss : 0.3624	Val Acc : 0.8811
best accuracy is 0.8815
epoch:76
Train loss : 0.2230	Train Acc : 0.9185
epoch:77
Train loss : 0.2197	Train Acc : 0.9214
epoch:78
Train loss : 0.2202	Train Acc : 0.9196
epoch:79
Train loss : 0.2172	Train Acc : 0.9220
epoch:80
Train loss : 0.2126	Train Acc : 0.9226
Val loss : 0.3423	Val Acc : 0.8843
best accuracy is 0.8843
epoch:81
Train loss : 0.2144	Train Acc : 0.9214
epoch:82
Train loss : 0.2136	Train Acc : 0.9220
epoch:83
Train loss : 0.2104	Train Acc : 0.9234
epoch:84
Train loss : 0.2114	Train Acc : 0.9230
epoch:85
Train loss : 0.2110	Train Acc : 0.9230
Val loss : 0.3471	Val Acc : 0.8803
best accuracy is 0.8843
epoch:86
Train loss : 0.2079	Train Acc : 0.9249
epoch:87
Train loss : 0.2037	Train Acc : 0.9259
epoch:88
Train loss : 0.2038	Train Acc : 0.9260
epoch:89
Train loss : 0.1993	Train Acc : 0.9269
epoch:90
Train loss : 0.2003	Train Acc : 0.9266
Val loss : 0.3470	Val Acc : 0.8838
best accuracy is 0.8843
epoch:91
Train loss : 0.1983	Train Acc : 0.9275
epoch:92
Train loss : 0.1967	Train Acc : 0.9279
epoch:93
Train loss : 0.1955	Train Acc : 0.9282
epoch:94
Train loss : 0.1959	Train Acc : 0.9286
epoch:95
Train loss : 0.1957	Train Acc : 0.9283
Val loss : 0.3573	Val Acc : 0.8802
best accuracy is 0.8843
epoch:96
Train loss : 0.1898	Train Acc : 0.9309
epoch:97
Train loss : 0.1894	Train Acc : 0.9314
epoch:98
Train loss : 0.1858	Train Acc : 0.9330
epoch:99
Train loss : 0.1885	Train Acc : 0.9298
epoch:100
Train loss : 0.1871	Train Acc : 0.9311
Val loss : 0.3567	Val Acc : 0.8817
best accuracy is 0.8843
epoch:101
Train loss : 0.1838	Train Acc : 0.9328
epoch:102
Train loss : 0.1846	Train Acc : 0.9331
epoch:103
Train loss : 0.1834	Train Acc : 0.9327
epoch:104
Train loss : 0.1797	Train Acc : 0.9336
epoch:105
Train loss : 0.1802	Train Acc : 0.9342
Val loss : 0.3582	Val Acc : 0.8816
best accuracy is 0.8843
epoch:106
Train loss : 0.1785	Train Acc : 0.9331
epoch:107
Train loss : 0.1769	Train Acc : 0.9350
epoch:108
Train loss : 0.1739	Train Acc : 0.9359
epoch:109
Train loss : 0.1732	Train Acc : 0.9373
epoch:110
Train loss : 0.1722	Train Acc : 0.9366
Val loss : 0.3505	Val Acc : 0.8823
best accuracy is 0.8843
epoch:111
Train loss : 0.1766	Train Acc : 0.9361
epoch:112
Train loss : 0.1677	Train Acc : 0.9380
epoch:113
Train loss : 0.1681	Train Acc : 0.9382
epoch:114
Train loss : 0.1688	Train Acc : 0.9390
epoch:115
Train loss : 0.1718	Train Acc : 0.9364
Val loss : 0.3663	Val Acc : 0.8820
best accuracy is 0.8843
epoch:116
Train loss : 0.1644	Train Acc : 0.9408
epoch:117
Train loss : 0.1661	Train Acc : 0.9389
epoch:118
Train loss : 0.1661	Train Acc : 0.9397
epoch:119
Train loss : 0.1586	Train Acc : 0.9419
epoch:120
Train loss : 0.1649	Train Acc : 0.9397
Val loss : 0.3607	Val Acc : 0.8834
best accuracy is 0.8843
epoch:121
Train loss : 0.1577	Train Acc : 0.9418
epoch:122
Train loss : 0.1594	Train Acc : 0.9419
epoch:123
Train loss : 0.1557	Train Acc : 0.9426
epoch:124
Train loss : 0.1561	Train Acc : 0.9410
epoch:125
Train loss : 0.1549	Train Acc : 0.9425
Val loss : 0.3493	Val Acc : 0.8854
best accuracy is 0.8854
epoch:126
Train loss : 0.1513	Train Acc : 0.9440
epoch:127
Train loss : 0.1535	Train Acc : 0.9434
epoch:128
Train loss : 0.1486	Train Acc : 0.9457
epoch:129
Train loss : 0.1539	Train Acc : 0.9437
epoch:130
Train loss : 0.1511	Train Acc : 0.9434
Val loss : 0.3598	Val Acc : 0.8837
best accuracy is 0.8854